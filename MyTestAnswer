Теоретические вопросы
Если что-то не делали или не знаете - укажите, не оставляйте пустых ответов

Блок Q1
1. C какими OС Вы работали? Работали ли с консолью? Какие консольные утилиты Linux
Вы знаете и использовали?

Windows, Android, на базе ядра Linux: Ubuntu, Kali, Debian.
Vim, Nano,Gedit, Cron, Менеджеры пакетов yum и apt

2. Как Вы повышаете свою профессиональную квалификацию (названия книг, курсов,
сайтов, скринкастов и т.д.)?

DevOps (Linuxtraningcenter, Youtube)
PHP (Stepic,ITVDN,Ментор Трепачев, Youtube)
Ruby (RubyRash, Youtube)
SQL (Youtube, Sql-ex.ru, MySQL.ru)

3. Какие сторонние библиотеки Вы используете чаще всего для разработки? Какие плюсы в
них Вы выделяете для себя? (Ruby или тот язык, на котором пишите)

Блок Q2
1. Какие инструменты для профайлинга и дебага Вы используете? Какие у них минусы?

О минусах пока в полном объеме не могу особо судить,т.к. не имею большого опыта.
Профайлинг и дебаг:
Benchmark;
-r profile для оценки работы по времени;
Xdebug;
RubyMine IDE Debugger;
GNU gdb (Ubuntu 8.3-0ubuntu1) 8.3;
Есть полноценные тулкиты для профилирования процессов и памяти, но я пока не имею опыта работы с ними,  планирую заняться
их изучением.

2. Объясните почему происходит следующее (в контексте языка Ruby):

a. 1660 / 100 ≠ 16.6
Результатом деления целых чисел в Ruby, является целое число. Поэтому 1660 / 100 = 16. Для того чтобы получить действительное
число в качестве результата деления двух целых чисел, необходимо привести хотябы одно из них к вещественному типу,
например так: 1660.0 / 100 или при помощи метода преобразования в вещественное число (с плавающей точкой) .to_f

1660.to_f / 100.

b. 24.0 * 0.1 ≠ 2.4
Проблема арифметики с плавающей точкой, возникающая из-за преобразования чисел с плавающей точкой из десятичной системы
счисления в двоичную и обратно.
В Ruby для решения проблем арифметики с плавающей точкой можно использовать класс BigDecimal:

24.0 * BigDecimal("0.1") # => 2.4

3. С какими СУБД вы работали? Проектировали ли вы свою собственную БД? Сколько
было в ней таблиц? С какой самой большой таблицей по количеству записей Вы
работали?
MySQL,Microsoft SQL Server

4. Оптимизировали ли Вы запросы в SQL? Как Вы это делали? Как Вы понимаете что
запрос выполняется оптимально?
Оптимизацией в полном смысле этого слова не занимался